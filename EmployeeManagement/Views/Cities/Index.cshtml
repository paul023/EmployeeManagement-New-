@model IEnumerable<EmployeeManagement.Models.City>

@{
    ViewData["Title"] = "City List";
}

<h1>City List</h1>

<!-- Alerts -->
<div style="position: fixed; top: 10px; right: 20px; z-index: 1050;">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["WarningMessage"] != null)
    {
        <div class="alert alert-warning alert-dismissible fade show" role="alert">
            @TempData["WarningMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
</div>

<script>
    // Automatically hide all alerts after 4 seconds
    setTimeout(function () {
        var alerts = document.querySelectorAll('.alert');
        alerts.forEach(function (alert) {
            var bsAlert = new bootstrap.Alert(alert);
            bsAlert.close();
        });
    }, 4000);
</script>

<p>
    <a asp-action="Create" class="btn btn-primary">
        <i class="fa fa-plus"></i> Create New
    </a>
</p>

<div class="card">
    <div class="card-header">
        <h3 class="card-title">City List</h3>
    </div>
    <div class="card-body">
        <table id="example1" class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Code)</th>
                    <th>@Html.DisplayNameFor(model => model.Name)</th>
                    <th>@Html.DisplayNameFor(model => model.Country)</th>
                    <th>@Html.DisplayNameFor(model => model.CreateById)</th>
                    <th>@Html.DisplayNameFor(model => model.CreatedOn)</th>
                    <th>@Html.DisplayNameFor(model => model.ModifiedById)</th>
                    <th>@Html.DisplayNameFor(model => model.ModifiedOn)</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Code)</td>
                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                        <td>@item.Country?.Name</td>
                        <td>@Html.DisplayFor(modelItem => item.CreateById)</td>
                        <td>@Html.DisplayFor(modelItem => item.CreatedOn)</td>
                        <td>@Html.DisplayFor(modelItem => item.ModifiedById)</td>
                        <td>@Html.DisplayFor(modelItem => item.ModifiedOn)</td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning" title="Edit">
                                <i class="fas fa-edit"></i>
                            </a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info" title="View">
                                <i class="fas fa-info-circle"></i>
                            </a>
                            <form asp-action="Delete" asp-route-id="@item.Id" method="post" style="display:inline;">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-sm btn-danger"
                                        onclick="return confirm('Are you sure you want to delete this city?');">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
